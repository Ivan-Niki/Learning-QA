
Тест-дизайн – это этап процесса тестирования ПО, на котором проектируются и создаются тест-кейсы, 
в соответствии c определенными ранее критериями качества и целями тестирования. 
Цель тест-дизайна – создать наборы тестовых случаев, обеспечивающих оптимальное тестовое покрытие.

Техники тестирования (Test techniques, Test design techniques) – методы, используемые для создания и/или выбора входных данных и условий выполнения тестов.

Техники тестирования (Test techniques, Test design techniques) – методы, используемые для создания и/или выбора входных данных и условий выполнения тестов.



================== 1. Эквивалентное разбиение (Equivalence partitioning – EP) =================

Техника эквивалентного разбиения (классы эквивалентности) – это разделение диапазона возможных вводимых значений на группы (классы) эквивалентных по своему влиянию на систему. Эта техника помогает не только сокращать количество тестов, но и сохранять приемлемое тестовое покрытие.
Рассмотрим для примера перевод денег в банке. Размер комиссии зависит от суммы перевода:
•	от 1 до 999 долларов включительно – 0%
•	от 1000 до 4999 долларов включительно – 5%
•	от 5000 долларов – 7%
Максимальная сумма перевода – 100000 долларов, при этом дробные числа не учитываются.
Попробуем выяснить, сколько требований будет в этом случае. В этом помогут классы эквивалентности:
•	1-999 => ожидаем комиссию 0%
•	1000-4999 => ожидаем комиссию 5%
•	5000-100000 => ожидаем комиссию 7%
Выбранные значения для проверки: 500, 2500, 7500.
•	На значение 500 система отреагирует так же, как и на любое другое значение из первого диапазона;
•	На значение 2500 система отреагирует так же, как и на любое другое значение из второго диапазона;
•	На значение 7500 система отреагирует так же, как и на любое другое значение из третьего диапазона.




=============== 2. Анализ граничных значений (Boundary Value Analysis - BVA) ==============

Граничные значения – это значения, в которых один класс эквивалентности переходит в другой. По своей сути это техника, которая дополняет технику классов эквивалентности.
Важно проверять граничные значения, потому что именно на границах чаще всего допускаются ошибки при написании кода и формулировании требований.
Например, неопытный программист при постановке «не больше 1000» может поставить значение <1000.
Вернемся к примеру с комиссией:
•	от 1 до 999 долларов включительно – 0%
•	от 1000 до 4999 долларов включительно – 5%
•	от 5000 долларов – 7%
Максимальная сумма перевода – 100000 долларов, при этом дробные числа не учитываются. Вспомним классы эквивалентности:
•	1-999 => ожидаем комиссию 0%
•	1000-4999 => ожидаем комиссию 5%
•	5000-100000 => ожидаем комиссию 7%
Граничные значения: 1, 999, 1000, 4999, 5000, 100000.
С учетом классов эквивалентности и граничных значений выбираем значения для проверки: 1, 500, 999, 1000, 2500, 4999, 5000, 7500, 100000.


