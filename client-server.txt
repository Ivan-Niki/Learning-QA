
------------ Клиент-серверная архитектура ------------

Архитектура «клиент-сервер» — компьютерная система, в которой множество клиентов (компьютеров) запрашивают и получают данные на центральном сервере. В этой модели есть три компонента: отображение, логика, и данные.
Существует три базовых типа клиент-серверной архитектуры: 2-уровневая, 3-уровневая, и n-уровневая. 


--- Толстые и тонкие клиенты ---
Если обработка логики и данных осуществляется на стороне клиента, то клиентский (например) ноутбук называется толстым клиентом.
Если это обрабатывается на сервере (оставляя у пользователя только отображение результата), то его ноутбук можно назвать тонким клиентом.



------ Двухуровневая клиент-серверная архитектура --------

В такой архитектуре уровень презентации (отображения, представления) — находится на компьютере (смарфоне) клиента, а уровень логики и данных — на сервере.



------ Трехуровневая клиент-серверная архитектура --------

Если объем вычислений огромен, и большая часть их происходит на сервере, то логика и данные могут быть разнесены по двум отдельным уровням (уровень логики и уровень данных); так получается 3-уровневая архитектура.
Вся «логическая часть» отправленного запроса будет обрабатываться на одном уровне, а часть обработки данных, касающихся этого запроса — на другом уровне; после обработки «финальный» ответ будет отправлен клиенту «назад по цепочке».

       запрос                   запрос
Клиент -------> Уровень логики --------> Уровень данных
       <-------                <-------
         ответ                  ответ




------- Многоуровневая клиент-серверная архитектура --------

Если ИТ-система еще больше (уровня большой корпорации с миллионами пользователей), а обработка данных еще более сложная и объемная, то в такой ИТ-системе может быть еще больше уровней (условно n уровней); чаще всего вводится уровень кэширования между уровнями логики и данных, а также уровень балансировки нагрузки, и прокси-уровни (м.б. несколько) между «базовыми» уровнем клиента и уровнем обработки логики.

Клиент --> Балансировщик нагрузки/или прокси --> Логика --> Кэширование --> Данные

