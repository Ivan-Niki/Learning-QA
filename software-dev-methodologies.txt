Управление разработкой программ и приложений — это, в первую очередь, создание структуры. 
Когда все этапы распланированы, можно спокойно по ним двигаться. 
Однако разным командам удобны разные методологии разработки ПО. 
Один вариант подходит для больших проектов, другой — для малых.

Методологии разработки — это наборы правил, ролей и основных задач, которыми руководствуются при создании ПО.
Методологии обеспечивают структурированный подход к созданию программы, определяют этапы работы и задают обязанности команды разработчиков.
У каждого подхода свои плюсы и минусы. Выбор зависит от особенностей компании и команды — и, конечно, 
для достижения лучшего результата стоит знать сильные и слабые стороны выбранного подхода.

Методология разработки — это набор принципов, ролей и практик, регулирующих процесс создания программы. 
Они предполагают тщательное планирование жизненного цикла разработки. 
Но есть важная особенность — они не прописывают конкретные технические моменты реализации.

Среди подходов (методологий) к созданию программных продуктов выделяют следующие варианты:

- waterfall – «водопад», каскадный прием;
- v-model – подход, реализуемый посредством тестирования;
- incremental model – инкрементная модель;
- iterative – итеративная;
- spiral – спиральный вариант;

- code and fix – кодирование и устранение ошибок;
- chaos model – «хаотичная» модель;
- prototype – прототипная.



============== 1. «Waterfall Model» (каскадная модель или «водопад») ==============
Впервые метод появился в 1970-х годах. 
Водопадная модель разработки — это линейный подход к разработке программного обеспечения. 
Она характеризуется строгим, структурированным процессом. Основной принцип — каждый этап проекта должен быть завершен до начала следующего. 
Как правило, модель состоит из следующих этапов разработки: 

1 - Cистемный анализ 
2 - Анализ требований 
3 - Проектирование
4 - Реализация (кодирование/разработка)
5 - Тестирование
6 - Внедрение
7 - Сопровождение

Плюсы водопадной модели:
- Эта методология хорошо подходит для проектов со строгими и понятными требованиями.
- Много внимания уделяется тщательному документированию каждого этапа разработки.
- Водопадная модель простая, четкая и понятная. Её легко внедрить в рабочий процесс благодаря простым фазам, которые идут строго по порядку.

Минусы водопадной модели:
- Недостаточно гибкости. После завершения какого-либо этапа сложно вернуться назад и внести изменения, не нарушая последующие этапы.
- Может быть проблематично применять в проектах, где нужны итерации и частая обратная связь от владельца продукта.
- Предполагает ограниченную вовлеченность владельца продукта, поскольку он участвует в проекте в основном в начале и в конце его реализации.
- Фаза тестирования наступает в конце проекта, поэтому проблемы и ошибки могут быть выявлены не сразу — а устранять их будет дорого и сложно.


Водопадная модель не лучшим образом подходит для сложных и крупных продуктов. 
Связано это с тем, что при обнаружении ошибки, ее исправление окажется долгим и дорогостоящим. 
А если у заказчиков в процессе создания контента появятся пожелания или критика, то разрабам предстоит
переписывать почти всю кодификацию.

«Водопад» сгодится для космической и медицинской отраслей, где уже есть база документации. 
Основная задача для успешной реализации проекта по подобному принципу – это написание подробных требований к разработке. 
В процессе осуществления тестинга должно быть минимум ошибок или полное их отсутствие.
Водопадная модель лучше всего подходит для проектов с ясной конечной целью и четко определенными требованиями, которые вряд ли изменятся по ходу разработки. 
Она будет хорошо работать, если технологии, инструменты и процессы хорошо отлажены и не меняются.


============== 2. «V-Model» (V-образная модель / разработка через тестирование) ==============
V-модель – это высокодисциплинированная модель SDLC, в которой параллельно с каждым этапом разработки предусмотрен этап тестирования. 
V-модель является расширенной версией каскадной модели (Waterfall), в которой разработка и тестирование программного обеспечения выполняются последовательно. 
Она также известна как модель валидации или верификации.

Это усовершенствованная каскадная модель, в которой заказчик вместе с командой программистов одновременно 
составляют требования к системе и описывают, как будут тестировать её на каждом этапе.
Требования выдвигаются для каждого этапа разработки.

  [Верификация]                                [Валидация]
1.Бизнес-требования    - - - - - - - - -   9.Приемочное тестирование
 2.Функцион. требования  - - - - - - -   8.Функцион. тестирование 
   3.Архитектура системы   - - - - -   7.Интеграционное тестирование 
    4.Архитектура компонентов  - -   6.Модульное тестирование
		                  5.Разработка

Когда использовать V-модель?
- Если требуется тщательное тестирование продукта, то V-модель оправдает заложенную 
в себя идею: validation and verification.
- Для малых и средних проектов, где требования четко определены и фиксированы.
- В условиях доступности инженеров необходимой квалификации, особенно тестировщиков.

V-модель применяется в сферах, где работа продукта не может быть остановлена. 
Например, разработка ПО для авиации представляет собой сложный документированный процесс, где каждый уровень
тщательно прописывается и отслеживается любая ошибка. 
Тестирование начинается только после глубокого анализа требований, описанных в документах. 
Такой процесс занимает много времени и требует высокого уровня профессионализма от исполнителей.


